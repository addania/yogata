{"componentChunkName":"component---src-templates-blog-post-js","path":"/Function_declaration_and_call/","result":{"data":{"markdownRemark":{"html":"<p>3 ways to define a function:</p>\n<pre><code>function bla() {\n  return null\n}\n</code></pre>\n<p>or</p>\n<pre><code>const blo = () => {\n  return null\n}\n</code></pre>\n<p>or</p>\n<pre><code>() => onClickZ(name, last) {\n  return null\n}\n</code></pre>\n<p>Above functions would be called like this:</p>\n<pre><code>bla()\nblo()\nonClickZ(name, last)\n</code></pre>\n<p>Parenthesis mean call function immediately and output whatever is in the return.</p>\n<p>Referencing a function needs to be without parenthesis:</p>\n<pre><code>bla\nblo\nonClickZ\n</code></pre>\n<p>Referencing can be also done in event handlers like this</p>\n<pre><code>onChange={()=>onClickZ(name,last)}\n</code></pre>\n<p>Above example is useful when we need to provide arguments to the function. But if we simply wrote</p>\n<pre><code>onClickZ(name,last)\n</code></pre>\n<p>we would actually CALL function, hence we need to use:</p>\n<pre><code>()=>onClickZ(name,last)\n</code></pre>\n<p>in order to reference a function and not to directly CALL it.</p>","frontmatter":{"title":"Function declaration and call"},"excerpt":"3 ways to define a function: or or Above functions would be called like this: Parenthesis mean call function immediately and output whateverâ€¦"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/Function_declaration_and_call/"}}}